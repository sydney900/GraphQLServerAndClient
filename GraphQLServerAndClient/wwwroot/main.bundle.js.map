{"version":3,"sources":["C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$_lazy_route_resource lazy","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.css","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.html","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.css","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.html","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.css","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.html","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/mat.module.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/models/client.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlAddClient.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlDeleteClient.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClients.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/$$_lazy_route_resource lazy\n// module id = ../../../../../ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js??ref--3-1!../../node_modules/postcss-loader/lib/index.js??postcss!@angular/material/prebuilt-themes/indigo-pink.css\"), \"\");\n\n// module\nexports.push([module.id, \"\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.css\n// module id = ../../../../../ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.html\n// module id = ../../../../../ClientApp/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ApolloModule, Apollo } from 'apollo-angular';\r\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\n\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './mat.module';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CreateClientComponent } from './clients/create-client/create-client.component';\r\nimport { PageNotFoundComponent } from './common/page-not-found/page-not-found.component';\r\nimport { ClientsListComponent } from './clients/clients-list/clients-list.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'main', component: ClientsListComponent, data: { title: 'Clients List' } },\r\n  { path: 'create-client', component: CreateClientComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '/main',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CreateClientComponent,\r\n    PageNotFoundComponent,\r\n    ClientsListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule, // provides HttpClient for HttpLink\r\n    ApolloModule,\r\n    HttpLinkModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      //{ enableTracing: true } // <-- debugging purposes only\r\n    ),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NoopAnimationsModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n  constructor(\r\n    apollo: Apollo,\r\n    httpLink: HttpLink\r\n  ) {\r\n    apollo.create({\r\n      // By default, this client will send queries to the\r\n      // `/graphql` endpoint on the same host\r\n      //link: httpLink.create({ uri: 'http://localhost:62001/graphql/' }),\r\n\t  link: httpLink.create({ uri: 'http://192.168.99.100:62002/graphql/' }),\t  \r\n      cache: new InMemoryCache()\r\n    });\r\n  }  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card-title {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card-header > button {\\r\\n  float: right;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.css\n// module id = ../../../../../ClientApp/app/clients/clients-list/clients-list.component.css\n// module chunks = main","module.exports = \"\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h3>\\r\\n    Clients\\r\\n  </h3>\\r\\n</div>\\r\\n\\r\\n<mat-list>\\r\\n  <mat-card *ngFor=\\\"let entry of clients | async | select: 'clients'\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar>\\r\\n        <i class=\\\"material-icons\\\">person</i>\\r\\n      </div>\\r\\n      <mat-card-title>{{entry.clientName}}</mat-card-title>\\r\\n      <button mat-mini-fab (click)=\\\"onDeleteClient(entry.id)\\\" color=\\\"primary\\\">\\r\\n        <mat-icon>delete</mat-icon>\\r\\n      </button>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div>\\r\\n        Email: <span> {{entry.email}} </span>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</mat-list>\\r\\n<div layout-algin=\\\"end center\\\">\\r\\n  <button (click)=\\\"onAddClient()\\\" mat-mini-fab>\\r\\n    <mat-icon>add</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.html\n// module id = ../../../../../ClientApp/app/clients/clients-list/clients-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport QueryClientAndProduct from '../../../clientGraphql/gqlQueryClientAndProduct';\r\nimport gqlGetAllClients from '../../../clientGraphql/gqlQueryClients';\r\nimport gqlDeleteClient from '../../../clientGraphql/gqlDeleteClient';\r\n\r\n@Component({\r\n  selector: 'app-clients-list',\r\n  templateUrl: './clients-list.component.html',\r\n  styleUrls: ['./clients-list.component.css']\r\n})\r\nexport class ClientsListComponent implements OnInit {\r\n\r\n  clients: Observable<any>;\r\n\r\n  constructor(private apollo: Apollo, private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clients = this.apollo.watchQuery({\r\n      query: gqlGetAllClients\r\n    }).valueChanges;\r\n\r\n    //this.apollo.watchQuery({\r\n    //  query: QueryClientAndProduct,\r\n    //  variables: {\r\n    //    clientId: '1',\r\n    //    prodId: '1'\r\n    //  }\r\n    //}).valueChanges\r\n    //  .subscribe(({ data }) => {\r\n    //    console.log(data);\r\n    //  });\r\n\r\n  }\r\n\r\n  onAddClient() {\r\n    //navigate to creat client\r\n    console.log(\"navigate to creat client\");\r\n\r\n    this.router.navigate([\"/create-client\"]);\r\n  }\r\n\r\n  onDeleteClient(id) {\r\n    //delete the client\r\n    console.log(\"delete the client\");\r\n\r\n    this.apollo.mutate({\r\n      mutation: gqlDeleteClient,\r\n      refetchQueries: [{ query: gqlGetAllClients }],\r\n      variables: {\r\n        id: id\r\n      }\r\n    }).subscribe(({ data }) => {\r\n        console.log('Deleted client: ', data);\r\n    }, (error) => {\r\n      console.log('there was an error deleting client', error);\r\n    });;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/clients-list/clients-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".clientform {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n}\\r\\n\\r\\n  .clientform > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.css\n// module id = ../../../../../ClientApp/app/clients/create-client/create-client.component.css\n// module chunks = main","module.exports = \"<form  class=\\\"clientform\\\" [formGroup]=\\\"clientForm\\\" (ngSubmit)=\\\"onSubmit(clientForm.value)\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Client Name\\\" formControlName=\\\"clientName\\\">\\r\\n    <mat-error *ngIf=\\\"clientForm.get('clientName')?.invalid\\\">Client name is required</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Client Password\\\" formControlName=\\\"clientPassword\\\" min=\\\"5\\\">\\r\\n    <mat-error *ngIf=\\\"clientForm.get('clientPassword')?.invalid\\\">Please input at least 5 characters</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter your email\\\" formControlName=\\\"email\\\" required>\\r\\n    <mat-error *ngIf=\\\"clientForm.get('email')?.invalid\\\">Please input correct email</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"Create\\\" />\\r\\n\\r\\n</form>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.html\n// module id = ../../../../../ClientApp/app/clients/create-client/create-client.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Apollo } from 'apollo-angular';\r\nimport gql from 'graphql-tag';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Client } from '../../models/client';\r\nimport gqlAddClient from '../../../clientGraphql/gqlAddClient';\r\nimport gqlGetAllClients from '../../../clientGraphql/gqlQueryClients';\r\n\r\n\r\n@Component({\r\n  selector: 'create-client',\r\n  templateUrl: './create-client.component.html',\r\n  styleUrls: ['./create-client.component.css']\r\n})\r\nexport class CreateClientComponent implements OnInit {\r\n\r\n  clientForm: FormGroup;\r\n  //clientName: String;\r\n  //clientPassword: String;\r\n  //email: String;\r\n  client: Client;\r\n\r\n  constructor(private fb: FormBuilder, private apollo: Apollo, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.client = new Client(null, \"\", \"\", \"\");\r\n\r\n    this.clientForm = new FormGroup({\r\n      clientName: new FormControl(\"\", {\r\n        validators: Validators.required,\r\n        updateOn: 'submit'\r\n      }),\r\n      clientPassword: new FormControl(\"\", {\r\n        validators: [Validators.required, Validators.min(5)],\r\n        updateOn: 'submit'\r\n      }),\r\n      email: new FormControl(\"\", {\r\n        validators: Validators.email,\r\n        updateOn: 'submit'\r\n      })\r\n    });\r\n\r\n    this.clientForm.valueChanges.subscribe(f => {\r\n      this.client.clientName = f.clientName;\r\n      this.client.clientPassword = f.clientPassword;\r\n      this.client.email = f.email;\r\n    });\r\n  }\r\n\r\n  onSubmit(fClient) {\r\n    this.apollo.mutate({\r\n      mutation: gqlAddClient,\r\n      refetchQueries: [{ query: gqlGetAllClients }],\r\n      variables: {\r\n        clientName: fClient.clientName,\r\n        clientPassword: fClient.clientPassword,\r\n        email: fClient.email\r\n      }\r\n    })\r\n      .subscribe(({ data }) => {\r\n        //console.log('Created client: ', data);\r\n        //then navigate to main\r\n        this.router.navigate([\"/main\"]);\r\n      }, (error) => {\r\n        console.log('there was an error creating client', error);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/clients/create-client/create-client.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.css\n// module id = ../../../../../ClientApp/app/common/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  The page you are look for are not found!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.html\n// module id = ../../../../../ClientApp/app/common/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/common/page-not-found/page-not-found.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule, MatListModule, MatCardModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule, MatListModule, MatCardModule],\r\n  exports: [MatButtonModule, MatInputModule, MatFormFieldModule, MatIconModule, MatListModule, MatCardModule],\r\n})\r\nexport class MaterialModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/mat.module.ts","export class Client {\r\n  constructor(\r\n    public id: string,\r\n    public clientName: string,\r\n    public clientPassword: string,\r\n    public email: string\r\n  ) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/app/models/client.ts","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\nmutation AddClient($clientName:String!, $clientPassword:String!, $email:String!) {\r\n  addClient(clientName: $clientName, clientPassword:$clientPassword, email:$email) {\r\n     id\r\n     clientName\r\n  }\r\n}\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlAddClient.ts","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\nmutation DeleteClient($id: Int!) {\r\n  deleteClient(id: $id) {\r\n    id\r\n  }\r\n}`;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlDeleteClient.ts","import gql from 'graphql-tag';\r\n\r\nexport default gql`{\r\n  clients {\r\n    id\r\n    clientName\r\n    clientPassWord\r\n    email\r\n  }\r\n}`;\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/clientGraphql/gqlQueryClients.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/5/4/r/GraphQLServerAndClient/GraphQLServerAndClient/ClientApp/main.ts"],"sourceRoot":"webpack:///"}